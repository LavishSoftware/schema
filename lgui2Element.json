{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://www.lavishsoft.com/schema/lgui2Element.json",
    "description": "A LavishGUI2 Element",
    "definitions": {
        "numberOrInteger": {
            "anyOf": [
                {
                    "type": "integer"
                },
                {
                    "type": "number"
                }
            ]
        },
        "lgui2": {
            "element": {
                "$ref": "#"
            },
            "brush": {
                "$ref": "http://www.lavishsoft.com/schema/lgui2Brush.json"
            },
            "font": {
                "$ref": "http://www.lavishsoft.com/schema/lgui2Font.json"
            },
            "animation": {
                "$ref": "http://www.lavishsoft.com/schema/lgui2Animation.json"
            },
            "animationType": {
                "$ref": "http://www.lavishsoft.com/schema/lgui2AnimationType.json"
            },
            "code": {
                "$ref": "http://www.lavishsoft.com/schema/lgui2LS1Code.json"
            },
            "dataBinding": {
                "description": "A LavishGUI2 Data Binding",
                "oneOf": [
                    {
                        "type": "string",
                        "examples": [
                            "MyObject.MyVariable"
                        ],
                        "description": "The path to a LavishScript variable to generate pullFormat and pushFormat from. The variable must support a \"Set\" method (common for LavishScript value types)."
                    },
                    {
                        "type": "object",
                        "properties": {
                            "pullFormat": {
                                "type": "string",
                                "examples": [
                                    "${MyObject.MyVariable}"
                                ],
                                "description": "A string containing a LavishScript Data Sequence (${LikeThese}), used to refresh the value from LavishScript"
                            },
                            "pushFormat": {
                                "type": "array",
                                "examples": [
                                    [
                                        "MyObject.MyVariable:Set[\"",
                                        "\"]"
                                    ]
                                ],
                                "description": "A 2-item array forming the left and right sides of a LavishScript command, used to push the value to LavishScript"
                            },
                            "pullReplaceNull": {
                                "type": "string",
                                "description": "A value to use instead if the Pull result is NULL"
                            },
                            "pushNullFormat": {
                                "type": "string",
                                "description": "A LavishScript command used to Push if the current value is NULL"
                            },
                            "pullOnce": {
                                "type": "boolean",
                                "default": false,
                                "description": "True if autoPull should be enabled for one Pull, and then disabled (e.g. to initialize a control, but not refresh automatically)"
                            },
                            "pullHook": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/lgui2/elementLocator"
                                    }
                                ],
                                "type": "object",
                                "description": "An Event Hook. When the hooked event fires, the Data Binding will Pull",
                                "properties": {
                                    "event": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "event"
                                ]
                            },
                            "autoPull": {
                                "type": "boolean",
                                "default": true,
                                "description": "True if the LGUI2 element should automatically refresh the value from LavishScript"
                            },
                            "autoPush": {
                                "type": "boolean",
                                "default": true,
                                "description": "True if the LGUI2 element should be able to automatically push value changes to LavishScript"
                            },
                            "bufferSize": {
                                "type": "integer",
                                "default": 4096,
                                "description": "Size of the temporary buffer used to Pull the value from LavishScript, which will restrict the length of pulled values. Long strings and other large objects could need a larger buffer, but the default 4096 is safe for the vast majority of cases."
                            },
                            "linkBinding":{
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/lgui2/elementLocator"
                                    }
                                ],
                                "type": "object",
                                "description": "Links this Data Binding to use another LGUI2 element's Data Binding",
                                "properties": {
                                    "member": {
                                        "type": "string",
                                        "description":"LavishScript object member for the desired Data Binding",
                                        "examples":[
                                            "CheckedBinding",
                                            "TextBinding",
                                            "ValueBinding"
                                        ]
                                    }
                                },
                                "required": [
                                    "member"
                                ]
                            }
                        }
                    }
                ]
            },
            "elementLocator": {
                "$ref": "http://www.lavishsoft.com/schema/lgui2ElementLocator.json"
            },
            "eventHandler": {
                "$ref": "http://www.lavishsoft.com/schema/lgui2EventHandler.json"
            },
            "inputBinding": {
                "$ref": "http://www.lavishsoft.com/schema/lgui2InputBinding.json"
            },
            "textScanner": {
                "$ref": "http://www.lavishsoft.com/schema/lgui2TextScanner.json"
            },
            "color": {
                "$ref": "http://www.lavishsoft.com/schema/lgui2Color.json"
            },
            "children": {
                "oneOf": [
                    {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/definitions/lgui2/element"
                        }
                    },
                    {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/lgui2/element"
                        }
                    }
                ]
            },
            "point": {
                "oneOf": [
                    {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/numberOrInteger"
                        },
                        "maxItems": 2
                    },
                    {
                        "type": "object",
                        "properties": {
                            "x": {
                                "$ref": "#/definitions/numberOrInteger"
                            },
                            "y": {
                                "$ref": "#/definitions/numberOrInteger"
                            }
                        }
                    }
                ]
            },
            "size": {
                "oneOf": [
                    {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/numberOrInteger"
                        },
                        "maxItems": 2
                    },
                    {
                        "type": "object",
                        "properties": {
                            "width": {
                                "$ref": "#/definitions/numberOrInteger"
                            },
                            "height": {
                                "$ref": "#/definitions/numberOrInteger"
                            }
                        }
                    }
                ]
            },
            "edge": {
                "type": "string",
                "enum": [
                    "left",
                    "right",
                    "top",
                    "bottom"
                ]
            },
            "thickness": {
                "oneOf": [
                    {
                        "type": "array",
                        "maxItems": 4,
                        "items": {
                            "$ref": "#/definitions/numberOrInteger"
                        }
                    },
                    {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "left": {
                                "$ref": "#/definitions/numberOrInteger"
                            },
                            "right": {
                                "$ref": "#/definitions/numberOrInteger"
                            },
                            "top": {
                                "$ref": "#/definitions/numberOrInteger"
                            },
                            "bottom": {
                                "$ref": "#/definitions/numberOrInteger"
                            }
                        }
                    }
                ]
            },
            "anchorBase": {
                "properties": {
                    "anchorToCursor": {
                        "type": "boolean"
                    },
                    "clipToParent": {
                        "type": "boolean"
                    },
                    "anchorLocation": {
                        "$ref": "#/definitions/lgui2/point"
                    },
                    "anchorLocationFactor": {
                        "$ref": "#/definitions/lgui2/point"
                    },
                    "anchorOffset": {
                        "$ref": "#/definitions/lgui2/point"
                    },
                    "anchorOffsetFactor": {
                        "$ref": "#/definitions/lgui2/point"
                    }
                }
            },
            "borderBase": {
                "properties": {
                    "borderBrush": {
                        "$ref": "#/definitions/lgui2/brush"
                    },
                    "backgroundBrush": {
                        "$ref": "#/definitions/lgui2/brush"
                    },
                    "borderThickness": {
                        "$ref": "#/definitions/lgui2/thickness"
                    }
                }
            },
            "textblockBase": {
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "lavishscript": {
                        "type": "object",
                        "properties": {
                            "parse": {
                                "type": "boolean"
                            },
                            "ms": {
                                "$ref": "#/definitions/numberOrInteger"
                            },
                            "frames": {
                                "$ref": "#/definitions/numberOrInteger"
                            },
                            "maxLength": {
                                "$ref": "#/definitions/numberOrInteger"
                            }
                        }
                    },
                    "textScanner": {
                        "$ref": "#/definitions/lgui2/textScanner"
                    },
                    "wrap": {
                        "type": "boolean",
                        "default": false
                    },
                    "textBinding": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/lgui2/dataBinding"
                            }
                        ],
                        "description": "A Data Binding to use for the text"
                    }
                }
            },
            "panelBase": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/borderBase"
                    }
                ],
                "properties": {
                    "children": {
                        "$ref": "#/definitions/lgui2/children"
                    }
                }
            },
            "contentContainer": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/borderBase"
                    }
                ],
                "properties": {
                    "content": {
                        "$ref": "#/definitions/lgui2/element"
                    },
                    "contentContainer": {
                        "$ref": "#/definitions/lgui2/element"
                    }
                }
            },
            "headeredContentContainer": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/contentContainer"
                    }
                ],
                "properties": {
                    "header": {
                        "$ref": "#/definitions/lgui2/element"
                    },
                    "headerContainer": {
                        "$ref": "#/definitions/lgui2/element"
                    }
                }
            },
            "item": {
                "oneOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "itemType": {
                                "type": "string",
                                "default": "default"
                            },
                            "itemAs": {
                                "type": "string",
                                "enum": [
                                    "content",
                                    "children"
                                ]
                            }
                        }
                    }
                ]
            },
            "itemViewGenerator": {
                "oneOf": [
                    {
                        "type": "array",
                        "minItems": 2,
                        "maxItems": 4,
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "method",
                                    "code",
                                    "property"
                                ]
                            }
                        },
                        "required": [
                            "type"
                        ],
                        "oneOf": [
                            {
                                "properties": {
                                    "type": {
                                        "const": "method"
                                    },
                                    "object": {
                                        "type": "string"
                                    },
                                    "method": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "object",
                                    "method"
                                ]
                            },
                            {
                                "properties": {
                                    "type": {
                                        "const": "code"
                                    },
                                    "code": {
                                        "allOf": [
                                            {
                                                "$ref": "#/definitions/lgui2/code"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "code"
                                ]
                            },
                            {
                                "properties":{
                                    "type": {
                                        "const": "property"
                                    },
                                    "propertyName":{
                                        "type":"string"
                                    },
                                    "templateName":{
                                        "type":"string"
                                    },
                                    "templateProperty":{
                                        "type":"string"
                                    }
                                },
                                "required":[
                                    "propertyName",
                                    "templateName",
                                    "templateProperty"
                                ]
                            }
                        ]
                    }
                ]
            },
            "itemList": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/contentContainer"
                    }
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/lgui2/item"
                        }
                    },
                    "defaultItemViewTemplate": {
                        "type": "string"
                    },
                    "itemViewGenerators": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/definitions/lgui2/itemViewGenerator"
                        }
                    },
                    "itemsBinding": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/lgui2/dataBinding"
                            }
                        ],
                        "description": "A Data Binding to use for the Item list (which should resolve to a JSON array), meant for use in initializing from new data sources. If automatic pull is enabled, it will be restricted to \"once\" behavior."
                    },
                    "selectedItemBinding": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/lgui2/dataBinding"
                            }
                        ],
                        "description": "A Data Binding to use for the selected Item, corresponding to the item's Index. If a selectedItemBindingProperty is provided, the selectedItemBinding corresponds instead to the item Data's value for the specified property; for Pull, a search is performed for an item with this value."
                    },
                    "selectedItemBindingProperty": {
                        "type": "string",
                        "description": "A property to use for the selectedItemBinding. If provided, the selectedItemBinding will correspond to the item Data's value for the specified property; Otheriwise, the selectedItemBinding is expected to correspond to the item's Index in the list. "
                    }
                }
            },
            "inputHook": {
                "type": "object",
                "properties": {
                    "control": {
                        "$ref": "http://www.lavishsoft.com/schema/lgui2InputBinding.json#/definitions/lgui2/inputControl"
                    },
                    "mouseFocus": {
                        "type": "boolean",
                        "description": "If true, the Input Hook is activated while the element has Mouse Focus (the primary element with mouseover). If neither Mouse or Keyboard focus are specified, the Input Hook is active by default.",
                        "default": false
                    },
                    "keyboardFocus": {
                        "type": "boolean",
                        "description": "If true, the Input Hook is activated while the element has Keyboard Focus. If neither Mouse or Keyboard focus are specified, the Input Hook is active by default.",
                        "default": false
                    },
                    "modifiers": {
                        "$ref": "http://www.lavishsoft.com/schema/lgui2InputBinding.json#/definitions/lgui2/modifiers"
                    },
                    "eventHandler": {
                        "$ref": "#/definitions/lgui2/eventHandler"
                    }
                },
                "required": [
                    "control",
                    "eventHandler"
                ]
            },
            "trigger": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Trigger. Because Triggers are defined within an Element, the Name is usually specified as the key in the 'triggers' property, and should not usually be specified as part of the Trigger itself."
                    },
                    "matched": {
                        "$ref": "#/definitions/lgui2/eventHandler"
                    },
                    "unmatched": {
                        "$ref": "#/definitions/lgui2/eventHandler"
                    },
                    "condition": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "manual",
                            "pulse",
                            "event"
                        ],
                        "default": "pulse"
                    },
                    "ls1event": {
                        "type": "string"
                    }
                },
                "required": [
                    "matched"
                ]
            },
            "anchor": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/contentContainer"
                    },
                    {
                        "$ref": "#/definitions/lgui2/anchorBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "anchor"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "border": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/borderBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "border"
                    },
                    "child": {
                        "$ref": "#/definitions/lgui2/element"
                    },
                    "horizontalContentAlignment": {
                        "type": "string",
                        "enum": [
                            "none",
                            "left",
                            "center",
                            "right",
                            "stretch"
                        ]
                    },
                    "verticalContentAlignment": {
                        "type": "string",
                        "enum": [
                            "none",
                            "top",
                            "center",
                            "bottom",
                            "stretch"
                        ]
                    },
                    "maintainAspectRatio": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "false"
                            },
                            {
                                "type": "integer"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    }
                },
                "required": [
                    "type"
                ]
            },
            "dockpanel": {
                "properties": {
                    "type": {
                        "const": "dockpanel"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/panelBase"
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "dragger": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/contentContainer"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "dragger"
                    },
                    "allowMove": {
                        "type": "boolean"
                    },
                    "allowResize": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "expander": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/headeredContentContainer"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "expander"
                    },
                    "expanded": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "hud": {
                "properties": {
                    "type": {
                        "const": "hud"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "objectview": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/contentContainer"
                    }
                ],
                "properties": {
                    "object":{
                        "type":"object"
                    },
                    "objectBinding":{
                        "type":"object"
                    },
                    "properties":{
                        "type":"array",
                        "items":{
                            "type":"object",
                            "properties":{
                                "propertyViewTemplate":{
                                    "type":"string",
                                    "default":"propertyview"
                                },
                                "editTemplate":{
                                    "type":"string"                                    
                                },
                                "dataBinding":{
                                    "$ref": "#/definitions/lgui2/dataBinding"
                                },
                                "controlData":{
                                    "type":"object"
                                }
                            },
                            "required":[
                                "editTemplate"
                            ]
                        }
                    }
                },
                "required": [
                    "type"
                ]
            },
            "propertyview":{
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/headeredContentContainer"
                    }
                ],
                "valueBinding":{
                    "$ref": "#/definitions/lgui2/dataBinding"
                }
            },
            "panel": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/panelBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "panel"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "popup": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/contentContainer"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "popup"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "radialItem": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/borderBase"
                    }
                ],
                "properties": {
                    "arcLength": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "innerRadius": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "outerRadius": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "arcMargins": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/numberOrInteger"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/numberOrInteger"
                                },
                                "minItems": 2,
                                "maxItems": 2
                            }
                        ]
                    },
                    "styles": {
                        "type": "object"
                    }
                }
            },
            "radialpanel": {
                "properties": {
                    "type": {
                        "const": "radialpanel"
                    },
                    "deadZone": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "liveZone": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "zoneMargin": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "deadZoneBrush": {
                        "$ref": "#/definitions/lgui2/brush"
                    },
                    "originDegrees": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "resolution": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "childSize": {
                        "$ref": "#/definitions/lgui2/size"
                    },
                    "radialItem": {
                        "$ref": "#/definitions/lgui2/radialItem"
                    }
                },
                "required": [
                    "type",
                    "childSize"
                ]
            },
            "screen": {
                "properties": {
                    "type": {
                        "const": "screen"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "scrollviewer": {
                "properties": {
                    "type": {
                        "const": "scrollviewer"
                    },
                    "horizontalBar": {
                        "type": {
                            "const": "scrollbar"
                        },
                        "allOf": [
                            {
                                "$ref": "#/definitions/lgui2/element"
                            }
                        ]
                    },
                    "verticalBar": {
                        "type": {
                            "const": "scrollbar"
                        },
                        "allOf": [
                            {
                                "$ref": "#/definitions/lgui2/element"
                            }
                        ]
                    },
                    "horizontalScroll": {
                        "type": "string",
                        "enum": [
                            "auto",
                            "none",
                            "fit",
                            "always"
                        ]
                    },
                    "verticalScroll": {
                        "type": "string",
                        "enum": [
                            "auto",
                            "none",
                            "fit",
                            "always"
                        ]
                    },
                    "maxContentWidth": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "maxContentHeight": {
                        "$ref": "#/definitions/numberOrInteger"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "stackpanel": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/panelBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "stackpanel"
                    },
                    "orientation": {
                        "type": "string",
                        "enum": [
                            "horizontal",
                            "vertical"
                        ],
                        "default": "vertical"
                    },
                    "uniform": {
                        "type": "boolean",
                        "default": false,
                        "description": "True if the stackpanel children should be uniformly-sized by filling the control. Same as horizontalContentAlignment/verticalContentAlignment \"stretch\""
                    },
                    "horizontalContentAlignment": {
                        "type": "string",
                        "enum": [
                            "none",
                            "left",
                            "center",
                            "right",
                            "stretch"
                        ],
                        "default": "none",
                        "description": "Horizontal alignment override used for children, or \"none\" to use child-specified alignment"
                    },
                    "verticalContentAlignment": {
                        "type": "string",
                        "enum": [
                            "none",
                            "top",
                            "center",
                            "bottom",
                            "stretch"
                        ],
                        "default": "none",
                        "description": "Vertical alignment override used for children, or \"none\" to use child-specified alignment"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "page": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/headeredContentContainer"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "page"
                    }
                }
            },
            "pagecontrol": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/headeredContentContainer"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "pagecontrol"
                    },
                    "headerEdge": {
                        "$ref": "#/definitions/lgui2/edge"
                    },
                    "pages": {
                        "oneOf": [
                            {
                                "type": "object",
                                "additionalProperties": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "type": {
                                                    "const": "page"
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/definitions/lgui2/page"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "type": {
                                                    "const": "page"
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/definitions/lgui2/page"
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                "required": [
                    "type"
                ]
            },
            "tab": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/headeredContentContainer"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "tab"
                    }
                }
            },
            "tabcontrol": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/headeredContentContainer"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "tabcontrol"
                    },
                    "headerEdge": {
                        "$ref": "#/definitions/lgui2/edge"
                    },
                    "tabs": {
                        "oneOf": [
                            {
                                "type": "object",
                                "additionalProperties": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "type": {
                                                    "const": "tab"
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/definitions/lgui2/tab"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "type": {
                                                    "const": "tab"
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/definitions/lgui2/tab"
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                "required": [
                    "type"
                ]
            },
            "table": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/panelBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "table"
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "height": {
                                    "$ref": "#/definitions/numberOrInteger"
                                },
                                "heightFactor": {
                                    "$ref": "#/definitions/numberOrInteger"
                                }
                            }
                        }
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "width": {
                                    "$ref": "#/definitions/numberOrInteger"
                                },
                                "widthFactor": {
                                    "$ref": "#/definitions/numberOrInteger"
                                }
                            }
                        }
                    },
                    "cellSpacing": {
                        "$ref": "#/definitions/lgui2/size"
                    },
                    "cellSpacingFactor": {
                        "$ref": "#/definitions/lgui2/size"
                    },
                    "autoFill":{
                        "type":"object",
                        "properties":{
                            "firstRow":{
                                "type":"integer"
                            },
                            "lastRow":{
                                "type":"integer"
                            },
                            "firstColumn":{
                                "type":"integer"
                            },
                            "lastColumn":{
                                "type":"integer"
                            }
                        }
                    }
                },
                "required": [
                    "type"
                ]
            },
            "window": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/contentContainer"
                    },
                    {
                        "$ref": "#/definitions/lgui2/anchorBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "window"
                    },
                    "title": {
                        "$ref": "#/definitions/lgui2/element"
                    },
                    "titleBar": {
                        "$ref": "#/definitions/lgui2/element"
                    },
                    "hideOnClose": {
                        "type": "boolean",
                        "default": false
                    },
                    "resizable": {
                        "type": "boolean",
                        "default": true
                    },
                    "widthResizable": {
                        "type": "boolean",
                        "default": true
                    },
                    "heightResizable": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": [
                    "type"
                ]
            },
            "wrappanel": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/panelBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "wrappanel"
                    },
                    "orientation": {
                        "type": "string",
                        "enum": [
                            "horizontal",
                            "vertical"
                        ],
                        "default": "vertical"
                    },
                    "uniform": {
                        "type": "boolean",
                        "default": false,
                        "description": "True if the wrappanel children should be uniformly-sized by filling the childSize. Same as horizontalContentAlignment/verticalContentAlignment \"stretch\""
                    },
                    "horizontalContentAlignment": {
                        "type": "string",
                        "enum": [
                            "none",
                            "left",
                            "center",
                            "right",
                            "stretch"
                        ],
                        "default": "none",
                        "description": "Horizontal alignment override used for children, or \"none\" to use child-specified alignment"
                    },
                    "verticalContentAlignment": {
                        "type": "string",
                        "enum": [
                            "none",
                            "top",
                            "center",
                            "bottom",
                            "stretch"
                        ],
                        "default": "none",
                        "description": "Vertical alignment override used for children, or \"none\" to use child-specified alignment"
                    },
                    "childSize": {
                        "$ref": "#/definitions/lgui2/size"
                    }
                },
                "required": [
                    "type",
                    "childSize"
                ]
            },
            "imagebox": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/borderBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "imagebox"
                    },
                    "imageBrush": {
                        "$ref": "#/definitions/lgui2/brush"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "progressbar": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/borderBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "progressbar"
                    },
                    "textblock": {
                        "$ref": "#/definitions/lgui2/element"
                    },
                    "text": {
                        "type": "string",
                        "enum": [
                            "none",
                            "percent",
                            "value",
                            "value/max"
                        ]
                    },
                    "fillerBrush": {
                        "$ref": "#/definitions/lgui2/brush"
                    },
                    "overlayBrush": {
                        "$ref": "#/definitions/lgui2/brush"
                    },
                    "minValue": {
                        "type": "integer"
                    },
                    "maxValue": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "integer"
                    },
                    "valueBinding": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/lgui2/dataBinding"
                            }
                        ],
                        "description": "A Data Binding to use for the value"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "radialgauge": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/borderBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "radialgauge"
                    },
                    "textblock": {
                        "$ref": "#/definitions/lgui2/element"
                    },
                    "text": {
                        "type": "string",
                        "enum": [
                            "none",
                            "percent",
                            "value",
                            "value/max"
                        ]
                    },
                    "fillerBrush": {
                        "$ref": "#/definitions/lgui2/brush"
                    },
                    "overlayBrush": {
                        "$ref": "#/definitions/lgui2/brush"
                    },
                    "originDegrees": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "resolution": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "minValue": {
                        "type": "integer"
                    },
                    "maxValue": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "integer"
                    },
                    "valueBinding": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/lgui2/dataBinding"
                            }
                        ],
                        "description": "A Data Binding to use for the value"
                    },
                    "maxValueArcLength": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "outerRadius": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "outerRadiusFactor": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "innerRadius": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "innerRadiusFactor": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "centerPoint": {
                        "$ref": "#/definitions/lgui2/point"
                    },
                    "centerPointFactor": {
                        "$ref": "#/definitions/lgui2/point"
                    },
                    "needles": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/definitions/lgui2/radialGaugeNeedle"
                        }
                    }
                },
                "required": [
                    "type"
                ]
            },
            "radialGaugeNeedle": {
                "type": "object",
                "properties": {
                    "backgroundBrush": {
                        "$ref": "#/definitions/lgui2/brush"
                    },
                    "name": {
                        "type": "string"
                    },
                    "minValue": {
                        "type": "integer"
                    },
                    "maxValue": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "integer"
                    },
                    "valueBinding": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/lgui2/dataBinding"
                            }
                        ],
                        "description": "A Data Binding to use for the value"
                    },
                    "originDegrees": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "maxValueArcLength": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "innerArcLength": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "outerArcLength": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "innerRadius": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "innerRadiusFactor": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "outerRadius": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "outerRadiusFactor": {
                        "$ref": "#/definitions/numberOrInteger"
                    },
                    "segments": {
                        "type": "integer"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "textblock": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/textblockBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "textblock"
                    },
                    "horizontalContentAlignment": {
                        "type": "string",
                        "enum": [
                            "none",
                            "left",
                            "center",
                            "right",
                            "stretch"
                        ]
                    },
                    "verticalContentAlignment": {
                        "type": "string",
                        "enum": [
                            "none",
                            "top",
                            "center",
                            "bottom",
                            "stretch"
                        ]
                    }
                },
                "required": [
                    "type"
                ]
            },
            "button": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/contentContainer"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "button"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "canvasVertex": {
                "oneOf": [
                    {
                        "type": "object",
                        "properties": {
                            "x": {
                                "type": "number"
                            },
                            "y": {
                                "type": "number"
                            },
                            "tu": {
                                "type": "number"
                            },
                            "tv": {
                                "type": "number"
                            },
                            "color": {
                                "$ref": "#/definitions/lgui2/color"
                            },
                            "opacity": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "type": "array",
                        "items": [
                            {
                                "type": "number",
                                "title": "X"
                            },
                            {
                                "type": "number",
                                "title": "Y"
                            },
                            {
                                "type": "number",
                                "title": "Texture X"
                            },
                            {
                                "type": "number",
                                "title": "Texture Y"
                            },
                            {
                                "$ref": "#/definitions/lgui2/color",
                                "title": "Color"
                            },
                            {
                                "type": "number",
                                "title": "Opacity"
                            }
                        ]
                    }
                ]
            },
            "canvasOperation": {
                "type": "object",
                "properties": {
                    "op": {
                        "type": "string",
                        "enum": [
                            "pushBrush",
                            "popBrush",
                            "pushFont",
                            "popFont",
                            "drawPrimitives",
                            "drawRect",
                            "drawText",
                            "drawArc",
                            "drawCircle",
                            "clear",
                            "initialize"
                        ]
                    }
                },
                "required": [
                    "op"
                ],
                "oneOf": [
                    {
                        "properties": {
                            "op": {
                                "const": "clear"
                            },
                            "color": {
                                "$ref": "#/definitions/lgui2/color"
                            },
                            "reset": {
                                "type": "boolean",
                                "description": "If set to true, resets the Font and Brush stacks along with the clear operation",
                                "default": false
                            },
                            "initialize": {
                                "type": "boolean",
                                "default": false,
                                "description": "If set to true, immediately processes the \"initialize\" operations (like an \"initialize\" with \"force\" enabled)"
                            }
                        },
                        "required": [
                            "op"
                        ]
                    },
                    {
                        "properties": {
                            "op": {
                                "const": "initialize"
                            },
                            "force": {
                                "type": "boolean",
                                "description": "If Initialize was already processed (including automatically by the canvas) since the canvas was allocated or reallocated, this operation would typically be ignored. Set Force to true to force it to occur (which may be useful after a clear operation, which does not reallocate the canvas)",
                                "default": false
                            }
                        },
                        "required": [
                            "op"
                        ]
                    },
                    {
                        "properties": {
                            "op": {
                                "const": "pushBrush"
                            },
                            "brush": "string"
                        },
                        "required": [
                            "op",
                            "brush"
                        ]
                    },
                    {
                        "properties": {
                            "op": {
                                "const": "popBrush"
                            },
                            "brush": "string"
                        },
                        "required": [
                            "op"
                        ]
                    },
                    {
                        "properties": {
                            "op": {
                                "const": "pushFont"
                            },
                            "font": "string"
                        },
                        "required": [
                            "op",
                            "font"
                        ]
                    },
                    {
                        "properties": {
                            "op": {
                                "const": "popFont"
                            },
                            "font": "string"
                        },
                        "required": [
                            "op"
                        ]
                    },
                    {
                        "properties": {
                            "op": {
                                "const": "drawPrimitives"
                            },
                            "type": {
                                "enum": [
                                    "triangleList",
                                    "triangleStrip",
                                    "lineList",
                                    "lineStrip",
                                    "pointList"
                                ]
                            },
                            "transform": {
                                "type": "boolean",
                                "default": true,
                                "description": "If true (default) the vertices are to be to be multiplied by canvas size"
                            },
                            "vertices": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/lgui2/canvasVertex"
                                }
                            }
                        },
                        "required": [
                            "op",
                            "type"
                        ]
                    },
                    {
                        "properties": {
                            "op": {
                                "const": "drawRect"
                            },
                            "opacity": {
                                "type": "number",
                                "default": 1.0
                            },
                            "color": {
                                "$ref": "#/definitions/lgui2/color"
                            },
                            "x": {
                                "type": "number"
                            },
                            "y": {
                                "type": "number"
                            },
                            "width": {
                                "type": "number"
                            },
                            "height": {
                                "type": "number"
                            },
                            "transform": {
                                "type": "boolean",
                                "default": true,
                                "description": "If true (default) the x,y,width,height are assumed to be between 0 and 1, and the generated vertices are to be to be multiplied by canvas size"
                            },
                            "texSz": {
                                "$ref": "#/definitions/lgui2/size"
                            },
                            "texPt": {
                                "$ref": "#/definitions/lgui2/point"
                            }
                        },
                        "required": [
                            "op"
                        ]
                    },
                    {
                        "properties": {
                            "op": {
                                "const": "drawCircle"
                            },
                            "opacity": {
                                "type": "number",
                                "default": 1.0
                            },
                            "color": {
                                "$ref": "#/definitions/lgui2/color"
                            },
                            "x": {
                                "type": "number"
                            },
                            "y": {
                                "type": "number"
                            },
                            "radius": {
                                "type": "number"
                            },
                            "resolution": {
                                "type": "integer"
                            },
                            "transform": {
                                "type": "boolean",
                                "default": true,
                                "description": "If true (default) the generated vertices are to be to be multiplied by canvas size"
                            }
                        },
                        "required": [
                            "op"
                        ]
                    },
                    {
                        "properties": {
                            "op": {
                                "const": "drawArc"
                            },
                            "opacity": {
                                "type": "number",
                                "default": 1.0
                            },
                            "color": {
                                "$ref": "#/definitions/lgui2/color"
                            },
                            "transform": {
                                "type": "boolean",
                                "default": true,
                                "description": "If true (default) the generated vertices are to be to be multiplied by canvas size"
                            },
                            "x": {
                                "type": "number"
                            },
                            "y": {
                                "type": "number"
                            },
                            "innerRadius": {
                                "type": "number"
                            },
                            "outerRadius": {
                                "type": "number"
                            },
                            "segments": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "op"
                        ],
                        "oneOf": [
                            {
                                "properties": {
                                    "centerDegrees": {
                                        "type": "number"
                                    },
                                    "innerArcLength": {
                                        "type": "number"
                                    },
                                    "outerArcLength": {
                                        "type": "number"
                                    },
                                    "u1": {
                                        "type": "number"
                                    },
                                    "u2": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "centerDegrees"
                                ]
                            },
                            {
                                "properties": {
                                    "startDegrees": {
                                        "type": "number"
                                    },
                                    "endDegrees": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "startDegrees"
                                ]
                            }
                        ]
                    },
                    {
                        "properties": {
                            "op": {
                                "const": "drawText"
                            },
                            "opacity": {
                                "type": "number",
                                "default": 1.0
                            },
                            "color": {
                                "$ref": "#/definitions/lgui2/color"
                            },
                            "x": {
                                "type": "number"
                            },
                            "y": {
                                "type": "number"
                            },
                            "width": {
                                "type": "number"
                            },
                            "height": {
                                "type": "number"
                            },
                            "transform": {
                                "type": "boolean",
                                "default": true,
                                "description": "If true (default) the generated vertices are to be to be multiplied by canvas size"
                            }
                        },
                        "required": [
                            "op"
                        ]
                    }
                ]
            },
            "canvas": {
                "type": "object",
                "properties": {
                    "type": {
                        "const": "canvas"
                    },
                    "width": {
                        "type": "number"
                    },
                    "height": {
                        "type": "number"
                    },
                    "fonts": {
                        "type": "object",
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lgui2/font"
                                }
                            ]
                        }
                    },
                    "brushes": {
                        "type": "object",
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lgui2/brush"
                                }
                            ]
                        }
                    },
                    "initialize": {
                        "type": "array",
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lgui2/canvasOperation"
                                }
                            ]
                        }
                    },
                    "batch": {
                        "type": "array",
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lgui2/canvasOperation"
                                }
                            ]
                        }
                    }
                },
                "required": [
                    "type"
                ]
            },
            "checkbox": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/contentContainer"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "checkbox"
                    },
                    "useIndeterminate": {
                        "type": "boolean",
                        "default": false
                    },
                    "checked": {
                        "type": "string",
                        "enum": [
                            "checked",
                            "unchecked",
                            "indeterminate"
                        ]
                    },
                    "checkedBinding": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/lgui2/dataBinding"
                            }
                        ],
                        "description": "A Data Binding to use for the checked state"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "combobox": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/itemList"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "combobox"
                    },
                    "popup": {
                        "$ref": "#/definitions/lgui2/element"
                    },
                    "selectedItemViewTemplate": {
                        "type": "string",
                        "default": "comboboxselection"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "commandbox": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/textblockBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "commandbox"
                    },
                    "multiline": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "contextmenu": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/itemList"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "contextmenu"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "itemview": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/contentContainer"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "itemview"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "knob": {
                "type": "object",
                "properties": {
                    "type": {
                        "const": "knob"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "listbox": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/itemList"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "listbox"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "scrollbar": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/panelBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "scrollbar"
                    },
                    "slider": {
                        "$ref": "#/definitions/lgui2/element"
                    },
                    "incButton": {
                        "$ref": "#/definitions/lgui2/element"
                    },
                    "decButton": {
                        "$ref": "#/definitions/lgui2/element"
                    },
                    "fromEdge": {
                        "$ref": "#/definitions/lgui2/edge"
                    },
                    "minValue": {
                        "type": "integer"
                    },
                    "maxValue": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "integer"
                    },
                    "valueBinding": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/lgui2/dataBinding"
                            }
                        ],
                        "description": "A Data Binding to use for the value"
                    },
                    "increment": {
                        "type": "integer"
                    },
                    "pageIncrement": {
                        "type": "integer"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "sensitivebutton": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/contentContainer"
                    }
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "const": "sensitivebutton"
                    },
                    "value": {
                        "type": "number"
                    },
                    "valueBinding": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/lgui2/dataBinding"
                            }
                        ],
                        "description": "A Data Binding to use for the value"
                    },
                    "bindContentOpacity": {
                        "type": "boolean",
                        "default": true,
                        "description": "If true (default), the Content's Opacity value will always be set to the sensitivebutton's Value"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "slider": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/borderBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "slider"
                    },
                    "handle": {
                        "$ref": "#/definitions/lgui2/element"
                    },
                    "fromEdge": {
                        "$reF": "#/definitions/lgui2/edge"
                    },
                    "minValue": {
                        "type": "integer"
                    },
                    "maxValue": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "integer"
                    },
                    "valueBinding": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/lgui2/dataBinding"
                            }
                        ],
                        "description": "A Data Binding to use for the value"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "textbox": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/textblockBase"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "textbox"
                    },
                    "multiline": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "broadcaster": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/contentContainer"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "broadcaster"
                    },
                    "broadcastTarget": {
                        "type": "string"
                    },
                    "receiver": {
                        "type": "string"
                    },
                    "blockLocal": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "videofeed": {
                "allOf": [
                    {
                        "$ref": "#/definitions/lgui2/remoteControl"
                    }
                ],
                "properties": {
                    "type": {
                        "const": "videofeed"
                    },
                    "feedName": {
                        "type": "string"
                    },
                    "permanent": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "remoteControl": {
                "type": "object",
                "properties": {
                    "sendKeyboard": {
                        "type": "boolean"
                    },
                    "sendMouse": {
                        "type": "boolean"
                    },
                    "sendForegroundOnly": {
                        "type": "boolean"
                    },
                    "receiveMouseFeedback": {
                        "type": "boolean"
                    },
                    "useLocalBindings": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "eventHandlersBase": {
                "type": "object",
                "onLoad": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouseMove": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouseWheel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouseButtonMove": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onButtonMove": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onAxisMove": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onNoteMove": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onDpadMove": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "gotKeyboardFocus": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "lostKeyboardFocus": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "lostMouseFocus": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "gotMouseFocus": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "lostMouseCapture": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "gotMouseCapture": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "lostMouseOver": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "gotMouseOver": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onVisualAttached": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onVisualDetached": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onLogicalAttached": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onLogicalDetached": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse1Press": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse1Release": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse1DoubleClick": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse2Press": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse2Release": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse2DoubleClick": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse3Press": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse3Release": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse3DoubleClick": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse4Press": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse4Release": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse4DoubleClick": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse5Press": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse5Release": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "onMouse5DoubleClick": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/lgui2/eventHandler"
                        }
                    ]
                },
                "additionalProperties": {
                    "$ref": "#/definitions/lgui2/eventHandler"
                }
            }
        }
    },
    "oneOf": [
        {
            "type": "string",
            "description": "A Text Block element briefly defined as a string"
        },
        {
            "type": "object",
            "properties": {
                "jsonTemplate": {
                    "type": "string",
                    "description": "The name of a Template, provided by a Skin, to serve as defaults for values not explicitly provided"
                },
                "type": {
                    "type": "string",
                    "description": "The name of a LavishGUI 2 element type",
                    "examples": [
                        "button",
                        "textbox",
                        "window"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "acceptsKeyboardFocus": {
                    "type": "boolean"
                },
                "acceptsMouseFocus": {
                    "type": "boolean"
                },
                "eventHandlers": {
                    "$ref": "#/definitions/lgui2/eventHandlersBase"
                },
                "styles": {
                    "type": "object",
                    "description": "An object containing named Styles, similar to Templates, which can be applied to this element on demand"
                },
                "contextMenu": {
                    "$ref": "#/definitions/lgui2/element"
                },
                "font": {
                    "$ref": "#/definitions/lgui2/font"
                },
                "color": {
                    "$ref": "#/definitions/lgui2/color"
                },
                "hooks": {
                    "type": "object",
                    "additionalProperties": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/lgui2/elementLocator"
                            }
                        ],
                        "type": "object",
                        "properties": {
                            "eventHandler": {
                                "$ref": "#/definitions/lgui2/eventHandler"
                            },
                            "event": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "event",
                            "eventHandler"
                        ]
                    }
                },
                "triggers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/lgui2/trigger"
                    }
                },
                "inputHooks": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/lgui2/inputHook"
                    }
                },
                "tooltip": {
                    "$ref": "#/definitions/lgui2/element"
                },
                "visibility": {
                    "type": "string",
                    "enum": [
                        "visible",
                        "hidden",
                        "collapsed"
                    ]
                },
                "opacity": {
                    "type": "number"
                },
                "strata": {
                    "type": "number"
                },
                "animations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lgui2/animation"
                    }
                },
                "margin": {
                    "$ref": "#/definitions/lgui2/thickness"
                },
                "padding": {
                    "$ref": "#/definitions/lgui2/thickness"
                },
                "minSize": {
                    "oneOf": [
                        {
                            "type": "object",
                            "properties": {
                                "width": {
                                    "$ref": "#/definitions/numberOrInteger"
                                },
                                "height": {
                                    "$ref": "#/definitions/numberOrInteger"
                                }
                            }
                        },
                        {
                            "type": "array",
                            "maxItems": 2
                        }
                    ]
                },
                "maxSize": {
                    "oneOf": [
                        {
                            "type": "object",
                            "properties": {
                                "width": {
                                    "$ref": "#/definitions/numberOrInteger"
                                },
                                "height": {
                                    "$ref": "#/definitions/numberOrInteger"
                                }
                            }
                        },
                        {
                            "type": "array",
                            "maxItems": 2
                        }
                    ]
                },
                "horizontalAlignment": {
                    "type": "string",
                    "enum": [
                        "none",
                        "left",
                        "center",
                        "right",
                        "stretch"
                    ]
                },
                "verticalAlignment": {
                    "type": "string",
                    "enum": [
                        "none",
                        "top",
                        "center",
                        "bottom",
                        "stretch"
                    ]
                },
                "width": {
                    "$ref": "#/definitions/numberOrInteger"
                },
                "height": {
                    "$ref": "#/definitions/numberOrInteger"
                },
                "widthFactor": {
                    "$ref": "#/definitions/numberOrInteger"
                },
                "heightFactor": {
                    "$ref": "#/definitions/numberOrInteger"
                },
                "x": {
                    "$ref": "#/definitions/numberOrInteger"
                },
                "y": {
                    "$ref": "#/definitions/numberOrInteger"
                },
                "xFactor": {
                    "$ref": "#/definitions/numberOrInteger"
                },
                "yFactor": {
                    "$ref": "#/definitions/numberOrInteger"
                }
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/lgui2/anchor"
                },
                {
                    "$ref": "#/definitions/lgui2/border"
                },
                {
                    "$ref": "#/definitions/lgui2/canvas"
                },
                {
                    "$ref": "#/definitions/lgui2/dockpanel"
                },
                {
                    "$ref": "#/definitions/lgui2/dragger"
                },
                {
                    "$ref": "#/definitions/lgui2/expander"
                },
                {
                    "$ref": "#/definitions/lgui2/hud"
                },
                {
                    "$ref": "#/definitions/lgui2/knob"
                },
                {
                    "$ref": "#/definitions/lgui2/objectview"
                },
                {
                    "$ref": "#/definitions/lgui2/propertyview"
                },
                {
                    "$ref": "#/definitions/lgui2/panel"
                },
                {
                    "$ref": "#/definitions/lgui2/popup"
                },
                {
                    "$ref": "#/definitions/lgui2/radialpanel"
                },
                {
                    "$ref": "#/definitions/lgui2/screen"
                },
                {
                    "$ref": "#/definitions/lgui2/scrollviewer"
                },
                {
                    "$ref": "#/definitions/lgui2/sensitivebutton"
                },
                {
                    "$ref": "#/definitions/lgui2/stackpanel"
                },
                {
                    "$ref": "#/definitions/lgui2/wrappanel"
                },
                {
                    "$ref": "#/definitions/lgui2/table"
                },
                {
                    "$ref": "#/definitions/lgui2/tab"
                },
                {
                    "$ref": "#/definitions/lgui2/tabcontrol"
                },
                {
                    "$ref": "#/definitions/lgui2/page"
                },
                {
                    "$ref": "#/definitions/lgui2/pagecontrol"
                },
                {
                    "$ref": "#/definitions/lgui2/window"
                },
                {
                    "$ref": "#/definitions/lgui2/imagebox"
                },
                {
                    "$ref": "#/definitions/lgui2/progressbar"
                },
                {
                    "$ref": "#/definitions/lgui2/radialgauge"
                },
                {
                    "$ref": "#/definitions/lgui2/textblock"
                },
                {
                    "$ref": "#/definitions/lgui2/button"
                },
                {
                    "$ref": "#/definitions/lgui2/checkbox"
                },
                {
                    "$ref": "#/definitions/lgui2/combobox"
                },
                {
                    "$ref": "#/definitions/lgui2/contextmenu"
                },
                {
                    "$ref": "#/definitions/lgui2/itemview"
                },
                {
                    "$ref": "#/definitions/lgui2/listbox"
                },
                {
                    "$ref": "#/definitions/lgui2/scrollbar"
                },
                {
                    "$ref": "#/definitions/lgui2/slider"
                },
                {
                    "$ref": "#/definitions/lgui2/textbox"
                },
                {
                    "$ref": "#/definitions/lgui2/broadcaster"
                },
                {
                    "$ref": "#/definitions/lgui2/videofeed"
                },
                {
                    "not": {
                        "required": [
                            "type"
                        ]
                    }
                }
            ]
        }
    ]
}